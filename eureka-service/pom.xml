<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.pasut.demo.microservices</groupId>
	<artifactId>eureka-service</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.name>tmx-eureka-service</docker.image.name>
    	<docker.image.tag>demo1</docker.image.tag>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.1.RELEASE</version>
	</parent>

	<build>
		<plugins>
			<plugin> <!-- Este plugin permite crear un jar, ademas tiene el goal spring-boot:run -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
             	<artifactId>maven-resources-plugin</artifactId>
             	<executions>
                 	<execution>
                     	<id>copy-resources</id>
                     	<!-- here the phase you need -->
                     	<phase>validate</phase>
                     	<goals>
                         	<goal>copy-resources</goal>
                     	</goals>
                     	<configuration>
                         	<outputDirectory>${basedir}/target/dockerfile</outputDirectory>
                         	<resources>
                             	<resource>
                                 	<directory>src/main/docker</directory>
                                 	<filtering>true</filtering>
                             	</resource>
                         	</resources>
                     	</configuration>
                 	</execution>
             	</executions>
         	</plugin>
         	<plugin>
	             <groupId>com.spotify</groupId>
	             <artifactId>docker-maven-plugin</artifactId>
	             <version>0.4.13</version>
				<executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>tag-image</id>
						<phase>package</phase>
						<goals>
							<goal>tag</goal>
						</goals>
						<configuration>
							<image>${docker.image.name}:${docker.image.tag}</image>
							<newName>lamaldiciondemandos/${docker.image.name}:${docker.image.tag}</newName>
						</configuration>
					</execution>
					<execution>
						<id>push-image</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<configuration>
							<imageName>lamaldiciondemandos/${docker.image.name}:${docker.image.tag}</imageName>
						</configuration>
					</execution>
				</executions>
	             <configuration>
	                 <imageName>lamaldiciondemandos/${docker.image.name}:${docker.image.tag}</imageName>
	                 <dockerDirectory>${basedir}/target/dockerfile</dockerDirectory>
					 <serverId>docker-hub</serverId>
					 <registry>hub.docker.com/lamaldiciondemandos</registry>
					 <authConfig>
						 <username>lamaldiciondemandos</username>
						 <password>jajaja capaz que te digo</password>
					 </authConfig>
	                 <resources>
	                     <resource>
	                         <targetPath>/</targetPath>
	                         <directory>${project.build.directory}</directory>
	                         <include>${project.build.finalName}.jar</include>
	                     </resource>
	                 </resources>
	             </configuration>
         </plugin>
		</plugins>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Camden.SR5</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

    <dependencies>
        <dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>
    </dependencies>
</project>